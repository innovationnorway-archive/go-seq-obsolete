/*
 * Seq API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package seq

import (
	"encoding/json"
)

// ApiKey struct for ApiKey
type ApiKey struct {
	AssignedPermissions *[]string `json:"AssignedPermissions,omitempty"`
	Id *string `json:"Id,omitempty"`
	InputSettings *InputSettings `json:"InputSettings,omitempty"`
	IsDefault *bool `json:"IsDefault,omitempty"`
	OwnerId *string `json:"OwnerId,omitempty"`
	Title string `json:"Title"`
	Token *string `json:"Token,omitempty"`
	TokenPrefix *string `json:"TokenPrefix,omitempty"`
}

// NewApiKey instantiates a new ApiKey object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiKey(title string, ) *ApiKey {
	this := ApiKey{}
	this.Title = title
	return &this
}

// NewApiKeyWithDefaults instantiates a new ApiKey object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiKeyWithDefaults() *ApiKey {
	this := ApiKey{}
	return &this
}

// GetAssignedPermissions returns the AssignedPermissions field value if set, zero value otherwise.
func (o *ApiKey) GetAssignedPermissions() []string {
	if o == nil || o.AssignedPermissions == nil {
		var ret []string
		return ret
	}
	return *o.AssignedPermissions
}

// GetAssignedPermissionsOk returns a tuple with the AssignedPermissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiKey) GetAssignedPermissionsOk() (*[]string, bool) {
	if o == nil || o.AssignedPermissions == nil {
		return nil, false
	}
	return o.AssignedPermissions, true
}

// HasAssignedPermissions returns a boolean if a field has been set.
func (o *ApiKey) HasAssignedPermissions() bool {
	if o != nil && o.AssignedPermissions != nil {
		return true
	}

	return false
}

// SetAssignedPermissions gets a reference to the given []string and assigns it to the AssignedPermissions field.
func (o *ApiKey) SetAssignedPermissions(v []string) {
	o.AssignedPermissions = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ApiKey) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiKey) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ApiKey) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ApiKey) SetId(v string) {
	o.Id = &v
}

// GetInputSettings returns the InputSettings field value if set, zero value otherwise.
func (o *ApiKey) GetInputSettings() InputSettings {
	if o == nil || o.InputSettings == nil {
		var ret InputSettings
		return ret
	}
	return *o.InputSettings
}

// GetInputSettingsOk returns a tuple with the InputSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiKey) GetInputSettingsOk() (*InputSettings, bool) {
	if o == nil || o.InputSettings == nil {
		return nil, false
	}
	return o.InputSettings, true
}

// HasInputSettings returns a boolean if a field has been set.
func (o *ApiKey) HasInputSettings() bool {
	if o != nil && o.InputSettings != nil {
		return true
	}

	return false
}

// SetInputSettings gets a reference to the given InputSettings and assigns it to the InputSettings field.
func (o *ApiKey) SetInputSettings(v InputSettings) {
	o.InputSettings = &v
}

// GetIsDefault returns the IsDefault field value if set, zero value otherwise.
func (o *ApiKey) GetIsDefault() bool {
	if o == nil || o.IsDefault == nil {
		var ret bool
		return ret
	}
	return *o.IsDefault
}

// GetIsDefaultOk returns a tuple with the IsDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiKey) GetIsDefaultOk() (*bool, bool) {
	if o == nil || o.IsDefault == nil {
		return nil, false
	}
	return o.IsDefault, true
}

// HasIsDefault returns a boolean if a field has been set.
func (o *ApiKey) HasIsDefault() bool {
	if o != nil && o.IsDefault != nil {
		return true
	}

	return false
}

// SetIsDefault gets a reference to the given bool and assigns it to the IsDefault field.
func (o *ApiKey) SetIsDefault(v bool) {
	o.IsDefault = &v
}

// GetOwnerId returns the OwnerId field value if set, zero value otherwise.
func (o *ApiKey) GetOwnerId() string {
	if o == nil || o.OwnerId == nil {
		var ret string
		return ret
	}
	return *o.OwnerId
}

// GetOwnerIdOk returns a tuple with the OwnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiKey) GetOwnerIdOk() (*string, bool) {
	if o == nil || o.OwnerId == nil {
		return nil, false
	}
	return o.OwnerId, true
}

// HasOwnerId returns a boolean if a field has been set.
func (o *ApiKey) HasOwnerId() bool {
	if o != nil && o.OwnerId != nil {
		return true
	}

	return false
}

// SetOwnerId gets a reference to the given string and assigns it to the OwnerId field.
func (o *ApiKey) SetOwnerId(v string) {
	o.OwnerId = &v
}

// GetTitle returns the Title field value
func (o *ApiKey) GetTitle() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *ApiKey) GetTitleOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *ApiKey) SetTitle(v string) {
	o.Title = v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *ApiKey) GetToken() string {
	if o == nil || o.Token == nil {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiKey) GetTokenOk() (*string, bool) {
	if o == nil || o.Token == nil {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *ApiKey) HasToken() bool {
	if o != nil && o.Token != nil {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *ApiKey) SetToken(v string) {
	o.Token = &v
}

// GetTokenPrefix returns the TokenPrefix field value if set, zero value otherwise.
func (o *ApiKey) GetTokenPrefix() string {
	if o == nil || o.TokenPrefix == nil {
		var ret string
		return ret
	}
	return *o.TokenPrefix
}

// GetTokenPrefixOk returns a tuple with the TokenPrefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiKey) GetTokenPrefixOk() (*string, bool) {
	if o == nil || o.TokenPrefix == nil {
		return nil, false
	}
	return o.TokenPrefix, true
}

// HasTokenPrefix returns a boolean if a field has been set.
func (o *ApiKey) HasTokenPrefix() bool {
	if o != nil && o.TokenPrefix != nil {
		return true
	}

	return false
}

// SetTokenPrefix gets a reference to the given string and assigns it to the TokenPrefix field.
func (o *ApiKey) SetTokenPrefix(v string) {
	o.TokenPrefix = &v
}

func (o ApiKey) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AssignedPermissions != nil {
		toSerialize["AssignedPermissions"] = o.AssignedPermissions
	}
	if o.Id != nil {
		toSerialize["Id"] = o.Id
	}
	if o.InputSettings != nil {
		toSerialize["InputSettings"] = o.InputSettings
	}
	if o.IsDefault != nil {
		toSerialize["IsDefault"] = o.IsDefault
	}
	if o.OwnerId != nil {
		toSerialize["OwnerId"] = o.OwnerId
	}
	if true {
		toSerialize["Title"] = o.Title
	}
	if o.Token != nil {
		toSerialize["Token"] = o.Token
	}
	if o.TokenPrefix != nil {
		toSerialize["TokenPrefix"] = o.TokenPrefix
	}
	return json.Marshal(toSerialize)
}

type NullableApiKey struct {
	value *ApiKey
	isSet bool
}

func (v NullableApiKey) Get() *ApiKey {
	return v.value
}

func (v *NullableApiKey) Set(val *ApiKey) {
	v.value = val
	v.isSet = true
}

func (v NullableApiKey) IsSet() bool {
	return v.isSet
}

func (v *NullableApiKey) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiKey(val *ApiKey) *NullableApiKey {
	return &NullableApiKey{value: val, isSet: true}
}

func (v NullableApiKey) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiKey) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


